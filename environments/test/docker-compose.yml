services:
  controller-1:
    image: apache/kafka:3.8.0
    container_name: controller-1
    labels:
      - 'custom.project=chat'
      - 'custom.service=controller1'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: SSL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INF'

  controller-2:
    image: apache/kafka:3.8.0
    container_name: controller-2
    labels:
      - 'custom.project=chat'
      - 'custom.service=controller2'
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: SSL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INF'

  controller-3:
    image: apache/kafka:3.8.0
    container_name: controller-3
    labels:
      - 'custom.project=chat'
      - 'custom.service=controller3'
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: SSL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INF'

  broker-1:
    image: apache/kafka:3.8.0
    container_name: broker-1
    hostname: b1.test
    labels:
      - 'custom.project=chat'
      - 'custom.service=broker1'
    ports:
      - "9092:9092"
    depends_on:
      - controller-1
      - controller-2
      - controller-3
    environment:
      KAFKA_BROKER_ID: 4
      KAFKA_PROCESS_ROLES: broker 

      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092,SSL://:19093,SSL_HOST://:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://b1.test:19092,PLAINTEXT_HOST://localhost:9092,SSL://b1.test:19093,SSL_HOST://localhost:9093'

      KAFKA_INTER_BROKER_LISTENER_NAME: SSL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SSL:SSL,SSL_HOST:SSL
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INF'

      KAFKA_SSL_KEYSTORE_FILENAME: broker.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: cert_creds
      KAFKA_SSL_KEY_CREDENTIALS: cert_creds 
      KAFKA_SSL_TRUSTSTORE_FILENAME: broker.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: cert_creds 
      KAFKA_SSL_CLIENT_AUTH: 'required'
    volumes:
      - ./secrets:/etc/kafka/secrets

  broker-2:
    image: apache/kafka:3.8.0
    container_name: broker-2
    hostname: b2.test
    labels:
      - 'custom.project=chat'
      - 'custom.service=broker2'
    ports:
      - "10092:10092"
    depends_on:
      - controller-1
      - controller-2
      - controller-3
    environment:
      KAFKA_BROKER_ID: 5
      KAFKA_PROCESS_ROLES: broker

      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:10092,SSL://:19093,SSL_HOST://:10093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://b2.test:19092,PLAINTEXT_HOST://localhost:10092,SSL://b2.test:19093,SSL_HOST://localhost:10093'

      KAFKA_INTER_BROKER_LISTENER_NAME: SSL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SSL:SSL,SSL_HOST:SSL
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INF'

      KAFKA_SSL_KEYSTORE_FILENAME: broker.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: cert_creds
      KAFKA_SSL_KEY_CREDENTIALS: cert_creds 
      KAFKA_SSL_TRUSTSTORE_FILENAME: broker.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: cert_creds 
      KAFKA_SSL_CLIENT_AUTH: 'required'
    volumes:
      - ./secrets:/etc/kafka/secrets

  broker-3:
    image: apache/kafka:3.8.0
    container_name: broker-3
    hostname: b3.test
    labels:
      - 'custom.project=chat'
      - 'custom.service=broker3'
    ports:
      - "11092:11092"
    depends_on:
      - controller-1
      - controller-2
      - controller-3
    environment:
      KAFKA_BROKER_ID: 6
      KAFKA_PROCESS_ROLES: broker

      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:11092,SSL://:19093,SSL_HOST://:11093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://b3.test:19092,PLAINTEXT_HOST://localhost:11092,SSL://b3.test:19093,SSL_HOST://localhost:11093'

      KAFKA_INTER_BROKER_LISTENER_NAME: SSL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SSL:SSL,SSL_HOST:SSL
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INF'

      KAFKA_SSL_KEYSTORE_FILENAME: broker.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: cert_creds
      KAFKA_SSL_KEY_CREDENTIALS: cert_creds 
      KAFKA_SSL_TRUSTSTORE_FILENAME: broker.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: cert_creds 
      KAFKA_SSL_CLIENT_AUTH: 'required'
    volumes:
      - ./secrets:/etc/kafka/secrets

  # schemaregistry:
  #   image: confluentinc/cp-schema-registry
  #   container_name: ${SR_HOST}
  #   hostname: ${SR_HOST}
  #   depends_on:
  #     - ${ZK_HOST}
  #     - ${BROKER_HOST}
  #   ports:
  #     - "${SR_PORT}:${SR_PORT}"
  #   environment:
  #     SCHEMA_REGISTRY_HOST_NAME: ${SR_HOST}
  #     SCHEMA_REGISTRY_LISTENERS: 'https://0.0.0.0:${SR_PORT}'
  #     SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: '${ZK_HOST}:${ZK_PORT}'
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'SSL://${BROKER_HOST}:${BROKER_PORT}'
  #     SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SSL
  #     SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/schema-registry/secrets/schema-registry.keystore.jks
  #     SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/schema-registry/secrets/schema-registry.keystore.jks
  #     SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: ${SSL_SECRET}
  #     SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: ${SSL_SECRET}
  #     SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: ${SSL_SECRET}
  #     SCHEMA_REGISTRY_SSL_KEY_PASSWORD: ${SSL_SECRET}
  #     SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/schema-registry/secrets/schema-registry.truststore.jks
  #     SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/schema-registry/secrets/schema-registry.truststore.jks
  #     SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: ${SSL_SECRET}
  #     SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: ${SSL_SECRET}
  #     SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: https
  #     SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
  #     SCHEMA_REGISTRY_SSL_CLIENT_AUTH: 'true'
  #   volumes:
  #     - ./secrets:/etc/schema-registry/secrets
  #
  # schemaregistryui:
  #   image: landoop/schema-registry-ui
  #   container_name: schemaregistryui
  #   hostname: schemaregistryui
  #   ports:
  #   - "${SRUI_PORT}:${SRUI_PORT}"
  #   environment:
  #     SCHEMAREGISTRY_URL: 'https://${SR_HOST}:${SR_PORT}'
  #     PROXY: "true"
